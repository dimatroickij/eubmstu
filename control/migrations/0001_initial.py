# Generated by Django 2.2 on 2019-05-05 19:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Departament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True, verbose_name='Код факультета')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название факультета')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_current', models.CharField(max_length=40, unique=True, verbose_name='Название (Текущая успеваемость)')),
                ('code_current', models.CharField(blank=True, max_length=7, unique=True, verbose_name='Код (Текущая успеваемость)')),
                ('name_session', models.CharField(max_length=40, unique=True, verbose_name='Название (Результаты сессии)')),
                ('code_session', models.CharField(blank=True, max_length=15, unique=True, verbose_name='Код (Результаты сессии)')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('gradebook', models.CharField(max_length=10, unique=True, verbose_name='Номер зачётной книжки')),
            ],
            options={
                'ordering': ['gradebook'],
            },
        ),
        migrations.CreateModel(
            name='Subdepartament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Код кафедры')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название кафедры')),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Departament')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('subdepartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Subdepartament')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True, verbose_name='Название группы')),
                ('code_link', models.CharField(max_length=50, unique=True, verbose_name='Код группы для сайта')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Semester')),
                ('subdepartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Subdepartament')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentsGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Student')),
            ],
            options={
                'ordering': ['group'],
                'unique_together': {('group', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_rating', models.CharField(choices=[('Кур', 'Курсовая'), ('Зач', 'Зачёт'), ('Экз', 'Экзамен'), ('Прк', 'Практика'), ('РЭ', 'Рейтинговый экзамен'), ('НРС', 'НРС'), ('', '')], max_length=5, verbose_name='Тип оценки')),
                ('rating', models.CharField(choices=[('Зчт', 'Зачтено'), ('Нзч', 'Не зачтено'), ('Отл', 'Отлично'), ('Хор', 'Хорошо'), ('Удов', 'Удовлетворительно'), ('НА', 'Не аттестован'), ('Я', 'Неявка')], max_length=4, verbose_name='Оценка')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Subject')),
            ],
            options={
                'unique_together': {('subject', 'student', 'type_rating')},
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(verbose_name='Количество баллов за предмет')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Subject')),
            ],
            options={
                'unique_together': {('subject', 'student')},
            },
        ),
    ]
